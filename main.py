(lambda flask, sqlite3, json: lambda db: lambda main: main(flask, db(sqlite3), json, flask.Flask("one_string_site")))(__import__("flask"), __import__("sqlite3"), __import__("json"))(lambda sqlite3: (lambda execute: {"create_record": lambda author, message: execute("INSERT INTO messages(author, message) VALUES('{0}', '{1}');".format(author, message)), "select_all_records": lambda: execute("SELECT author, message FROM messages ORDER BY id DESC"), "table_test": lambda: execute("CREATE TABLE if not exists messages(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, author text, message text)")})(lambda sql: (lambda connect: (lambda cursor: [cursor.execute(sql), connect.commit(), cursor.fetchall()])(connect.cursor())[2])(sqlite3.connect("test.db"))))(lambda flask, db, json, app: [db["table_test"], (lambda func: app.route("/", methods=["GET"])([func.__setattr__("__name__", "index"), func][1]))(lambda: """<!DOCTYPE html><html><head><title>One String Site</title><meta charset="utf-8"></head><body><h2>One String Site</h2><form onsubmit="publish()"><p><input type="text" placeholder="Author" id="author" name="author"></p><p><textarea placeholder="Message" id="message" name="message"></textarea></p><p><input type="button" id="publish_button" value="Public"></p></form><hr><div id="content"></div><script>function hz(authors){var content = document.getElementById("content");content.innerHTML = "";for(i = 0; i < authors.length;i++){var message = document.createElement("div");var message_author = document.createElement("h4");var message_text = document.createElement("p");message_author.innerHTML = authors[i].author;message_text.innerHTML = authors[i].message;message.appendChild(message_author);message.appendChild(message_text);message.appendChild(document.createElement("hr"));content.appendChild(message);}}function error_message() {content = document.getElementById("content");content.innerHTML = "";message = document.createElement("p");message.style.background = "#ff4444";message.style.color = "#ffffff";message.innerHTML = "Connection error";content.appendChild(message);}setInterval(() => {fetch('/getAll').then(response => response.json()).then(json => hz(json)).catch(error_message)}, 1000);function publish() {var author = document.getElementById("author").value;var message = document.getElementById("message").value;if(author == "") author = "anonymous";if(message != "")fetch('/send', {method: 'post',headers: {"Content-type": "application/x-www-form-urlencoded; charset=UTF-8"},body: 'author='+author+'&message='+message});document.getElementById("author").value = "";document.getElementById("message").value = "";};document.getElementById("publish_button").addEventListener('click', publish);</script></body></html>"""), (lambda func: app.route("/send", methods=["POST"])([func.__setattr__("__name__", "send"), func][1]))(lambda: [db["create_record"](flask.request.form['author'], flask.request.form['message']), flask.redirect("/")][1]), (lambda func: app.route("/getAll", methods=["GET"])([func.__setattr__("__name__", "getAll"), func][1]))(lambda: json.dumps([{"author": i[0], "message": i[1]} for i in db["select_all_records"]()])), app.run(host="localhost", port=8000)])